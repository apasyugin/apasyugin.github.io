{"version":3,"sources":["logo.svg","img/profile.png","pages/AboutPage.js","App.js","reportWebVitals.js","index.js"],"names":["AboutPage","src","ProfileImage","React","Component","App","className","to","exact","path","Home","AppPage","page","name","Page","text","logo","alt","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAAe,G,MAAA,IAA0B,kC,wCCA1B,G,MAAA,IAA0B,qCCc1BA,E,uKARP,OAAO,gCACH,qBAAKC,IAAKC,IACV,+JACA,4mB,GALYC,IAAMC,W,cCgBf,SAASC,IACpB,OACI,cAAC,IAAD,UACI,sBAAKC,UAAU,MAAf,UACI,sBAAKA,UAAU,YAAf,UACI,sDACA,+BACI,6BACI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,SAAT,2BAIR,uBAEA,0CACA,+BACI,6BACI,cAAC,IAAD,CAAMA,GAAG,WAAT,uBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,WAAT,uBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,eAAT,2BAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,UAAT,sBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,UAAT,sBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,QAAT,oBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,sBAAT,wCAIZ,qBAAKD,UAAU,SAAf,SAQI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAlB,SACI,cAACC,EAAD,MAEJ,cAAC,IAAD,CAAOD,KAAK,SAAZ,SACI,cAACE,EAAD,CAASC,KAAM,cAAC,EAAD,CAAWC,KAAK,aAEnC,cAAC,IAAD,CAAOJ,KAAK,WAAZ,SACI,cAACK,EAAD,CAAMC,KAAK,cAEf,cAAC,IAAD,CAAON,KAAK,WAAZ,SACI,cAACK,EAAD,CAAMC,KAAK,cAEf,cAAC,IAAD,CAAON,KAAK,eAAZ,SACI,cAACK,EAAD,CAAMC,KAAK,kBAEf,cAAC,IAAD,CAAON,KAAK,UAAZ,SACI,cAACK,EAAD,CAAMC,KAAK,aAEf,cAAC,IAAD,CAAON,KAAK,UAAZ,SACI,cAACK,EAAD,CAAMC,KAAK,aAEf,cAAC,IAAD,CAAON,KAAK,QAAZ,SACI,cAACK,EAAD,CAAMC,KAAK,WAEf,cAAC,IAAD,CAAON,KAAK,SAAZ,SACI,cAACK,EAAD,CAAMC,KAAK,YAEf,cAAC,IAAD,CAAON,KAAK,sBAAZ,SACI,cAACK,EAAD,CAAMC,KAAK,mCASvC,SAASL,IACL,OACI,qBAAKJ,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKL,IAAKe,EAAMV,UAAU,WAAWW,IAAI,SACzC,2DAQhB,SAASH,EAAKI,GACV,OACI,qBAAKZ,UAAU,kBAAf,SACI,6BAAKY,EAAMH,SAMvB,SAASJ,EAAQO,GACb,OACI,qBAAKZ,UAAU,kBAAf,SACI,6BAAKY,EAAMN,SCxIvB,IAYeO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.101721a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.5d2fdadb.svg\";","export default __webpack_public_path__ + \"static/media/profile.ace1e679.png\";","import './AboutPage.css';\nimport ProfileImage from '../img/profile.png'\nimport React from \"react\";\n\nclass AboutPage extends React.Component {\n    render() {\n        return <div>\n            <img src={ProfileImage} />\n            <h5>Привет, меня зовут Артем!</h5>\n            <a>Тут я расскажу про учебу и мою историю карьеры от разработчика приложений на андроид до банковских сервисов на java</a>\n        </div>;\n    }\n}\n\nexport default AboutPage;","import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport AboutPage from \"./pages/AboutPage\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n// This site has 3 pages, all of which are rendered\n// dynamically in the browser (not server rendered).\n//\n// Although the page does not ever refresh, notice how\n// React Router keeps the URL up to date as you navigate\n// through the site. This preserves the browser history,\n// making sure things like the back button and bookmarks\n// work properly.\n\nexport default function App() {\n    return (\n        <Router>\n            <div className='row'>\n                <div className=\"Menu-list\">\n                    <h2>Artem Pasyugin notes</h2>\n                    <ul>\n                        <li>\n                            <Link to=\"/\">Home</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/about\">About me</Link>\n                        </li>\n                    </ul>\n\n                    <hr/>\n\n                    <h2>Tag list</h2>\n                    <ul>\n                        <li>\n                            <Link to=\"/android\">Android</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/ansible\">Ansible</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/concurrency\">Cuncurrency</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/devops\">Devops</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/docker\">Docker</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/java\">Java</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/linux\">Linux</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/project-management\">Project management</Link>\n                        </li>\n                    </ul>\n                </div>\n                <div className='column'>\n                    {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Home/>\n                        </Route>\n                        <Route path=\"/about\">\n                            <AppPage page={<AboutPage name=\"Boss\"/>}/>\n                        </Route>\n                        <Route path=\"/android\">\n                            <Page text=\"Android\"/>\n                        </Route>\n                        <Route path=\"/ansible\">\n                            <Page text=\"Ansible\"/>\n                        </Route>\n                        <Route path=\"/concurrency\">\n                            <Page text=\"Concurrency\"/>\n                        </Route>\n                        <Route path=\"/devops\">\n                            <Page text=\"Devops\"/>\n                        </Route>\n                        <Route path=\"/docker\">\n                            <Page text=\"Docker\"/>\n                        </Route>\n                        <Route path=\"/java\">\n                            <Page text=\"Java\"/>\n                        </Route>\n                        <Route path=\"/linux\">\n                            <Page text=\"Linux\"/>\n                        </Route>\n                        <Route path=\"/project-management\">\n                            <Page text=\"Project management\"/>\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nfunction Home() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                <p>\n                    Time to build empire!\n                </p>\n            </header>\n        </div>\n    );\n}\n\nfunction Page(props) {\n    return (\n        <div className=\"page App-header\">\n            <h2>{props.text}</h2>\n        </div>\n    );\n}\n\n\nfunction AppPage(props) {\n    return (\n        <div className=\"page App-header\">\n            <h2>{props.page}</h2>\n        </div>\n    );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}